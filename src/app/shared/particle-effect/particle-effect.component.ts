import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-particle-effect',
  templateUrl: './particle-effect.component.html',
  styleUrls: ['./particle-effect.component.css']
})
export class ParticleEffectComponent implements OnInit {
  // M·∫£ng ch·ª©a s·ªë l∆∞·ª£ng h·∫°t (particles) b·∫°n mu·ªën t·∫°o
  particleCount = 30; 
  particles: { id: number; delay: number; duration: number }[] = [];

  ngOnInit() {
    for (let i = 0; i < this.particleCount; i++) {
      this.particles.push({
        id: i,
        // Ng·∫´u nhi√™n h√≥a th·ªùi gian tr·ªÖ (delay) ƒë·ªÉ h·∫°t xu·∫•t hi·ªán ng·∫´u nhi√™n
        delay: Math.random() * 10, 
        // Ng·∫´u nhi√™n h√≥a th·ªùi gian bay (duration) ƒë·ªÉ t·ªëc ƒë·ªô kh√°c nhau
        duration: 8 + Math.random() * 8 
      });
    }
  }

  // Ph∆∞∆°ng th·ª©c tr·∫£ v·ªÅ bi·ªÉu t∆∞·ª£ng ng·∫´u nhi√™n (tr√°i tim, bong b√≥ng...)
  getParticleSymbol(id: number): string {
    const symbols = ['‚ù§Ô∏è', 'üéà', '‚ú®', 'üíñ'];
    // D√πng id ƒë·ªÉ ƒë·∫£m b·∫£o m·ªói h·∫°t c√≥ m·ªôt bi·ªÉu t∆∞·ª£ng ng·∫´u nhi√™n c·ªë ƒë·ªãnh
    return symbols[id % symbols.length]; 
  }
}